@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ont: <http://ontologies.vub.be/oecd#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .


<#PDFlinkTriplesFirstMap>
    rr:logicalTable [ rr:sqlQuery """
                WITH RECURSIVE PDFLINKFIRST (ID, PDFLINKFIRST, REST) AS
                            (
                                    SELECT
                        ID,
                        NULL,
                        PDFLINKFIRST || ','
                    FROM (  SELECT
                                ROWNUM() AS ID,
                                \"PDF link\" AS PDFLINKFIRST
                            FROM NON_OECD WHERE \"PDF link\" IS NOT NULL
                    )
                                    UNION ALL
                                    SELECT
                        ID,
                        TRIM(SUBSTR(REST, 0, INSTR(REST, ',') - 1)),
                        SUBSTR(REST, INSTR(REST, ',') + 1)
                    FROM PDFLINKFIRST WHERE REST <> ''
                            ) SELECT DISTINCT * FROM PDFLINKFIRST
        """ ] ;

            rr:subjectMap [
        rr:template "http://toxin.vub.be/resource/pdfLink/{PDFLINKFIRST}" ;
    ] ;
.

<#DossierTriplesMap>
    rr:logicalTable [ rr:sqlQuery "SELECT ROWNUM() AS ID, * FROM non_oecd" ] ;

    rr:subjectMap [
        rr:template "http://toxin.vub.be/resource/dossier/{DOSSIER}" ;
        rr:class ont:Report ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ont:contains ;
        rr:objectMap [ 
            rr:parentTriplesMap <#TestTriplesMap> ; 
            rr:joinCondition [ rr:child "ID" ; rr:parent "ID" ; ] ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [ rr:column "DOSSIER" ; ] ;
    ] ;

     rr:predicateObjectMap [
        rr:predicate ont:guideline ;

        rr:objectMap [ 
            # rr:column "GUIDELINE" ; 
            #TODO: everywhere
            rr:template "http://toxin.vub.be/resource/guideline/{GUIDELINE}" ; 
        ] ;
    ] ; 


    # rr:predicateObjectMap [
    #     rr:predicate rdfs:seeAlso ;
    #     rr:objectMap [ rr:column "\"PDF link\"" ; rr:termType rr:IRI ; ] ;
    # ] ;
    rr:predicateObjectMap [
        rr:predicate ont:seeAlso;
        rr:objectMap [
            rr:parentTriplesMap <#PDFlinkTriplesFirstMap> ;
            rr:joinCondition [ rr:child "ID" ; rr:parent "ID" ; ] ;
        ] ;
    ] ;
.

<#CompoundTriplesMap>
    rr:logicalTable [ rr:sqlQuery "SELECT ROWNUM() AS ID, * FROM non_oecd" ] ;

    rr:subjectMap [
        rr:template "http://toxin.vub.be/resource/compound/{DOSSIER}" ;
        rr:class ont:Compound ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [ rr:column "DOSSIER" ; ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ont:compoundOf ;
        rr:objectMap [ 
            rr:parentTriplesMap <#DossierTriplesMap> ; 
            rr:joinCondition [ rr:child "ID" ; rr:parent "ID" ; ] ;
        ] ;
    ] ;
.


<#TestTriplesMap>

    rr:logicalTable [ rr:sqlQuery "SELECT ROWNUM() AS ID, * FROM non_oecd" ] ;
  
     rr:predicateObjectMap [
        rr:predicate ont:guidelineLabel ;
        rr:objectMap [ rr:column "\"GUIDELINE\"" ; ] ;
    ] ; 
    rr:predicateObjectMap [
            rr:predicate ont:guideline ;

            rr:objectMap [ 
                # rr:column "GUIDELINE" ; 
                #TODO: everywhere
                rr:template "http://toxin.vub.be/resource/guideline/{GUIDELINE}" ; 
            ] ;
        ] ; 

    rr:subjectMap [
        rr:template "http://toxin.vub.be/resource/test/repeated-dose-toxicity/non_oecd/{ID}" ;
        rr:class ont:Test ;
    ] ;

     rr:predicateObjectMap [
        rr:predicate ont:type ;
        rr:objectMap [ rr:column "\"type of study\"" ; ] ;
    ] ; 
    ### BEGIN LINK WITH COMPOUND
    rr:predicateObjectMap [
        rr:predicate ont:compound ;
        rr:objectMap [ 
            rr:parentTriplesMap <#CompoundTriplesMap> ; 
            rr:joinCondition [ rr:child "ID" ; rr:parent "ID" ; ] ;
        ] ;
    ] ;
    ### END LINK WITH COMPOUND

    rr:predicateObjectMap [
        rr:predicate ont:compoundLabel ;
        rr:objectMap [ rr:column "DOSSIER" ; ] ;
    ] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_observations_clinical_observations ;
rr:objectMap [ rr:column "Endpoints: Observations: clinical observations" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_observations_functional_observations ;
rr:objectMap [ rr:column "Endpoints: Observations: functional observations" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_observations_other ;
rr:objectMap [ rr:column "Endpoints: Observations: other" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_haematology ;
rr:objectMap [ rr:column "Endpoints: haematology" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_clinical_biochemistry_urinalysis;
rr:objectMap [ rr:column "Endpoints: Clinical biochemistry: urinalysis" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:blood_and_serum_biomarkers ;
rr:objectMap [ rr:column "Endpoints: Clinical biochemistry: blood and serum biomarkers" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:gross_pathology ;
rr:objectMap [ rr:column "Endpoints: Pathology: gross pathology" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:histopathology ;
rr:objectMap [ rr:column "Endpoints: Pathology: histopathology" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_critical_effect ;
rr:objectMap [ rr:column "Endpoints: critical effect" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_point_of_departure ;
rr:objectMap [ rr:column "Endpoints: point of departure (pod)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_description_of_pod ;
rr:objectMap [ rr:column "Endpoints: description of pod" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_target_organ ;
rr:objectMap [ rr:column "Endpoints: target organ" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_moribund_or_dead_animals_prior_to_study_termination ;
rr:objectMap [ rr:column "Endpoints: moribund or dead animals prior to study termination" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_mortality_rate ;
rr:objectMap [ rr:column "Endpoints: mortality rate" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:endpoints_conclusion ;
rr:objectMap [ rr:column "Endpoints: conclusion" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_homogeneity_and_stability ;
rr:objectMap [ rr:column "Test method: Test substance: homogeneity and stability" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_treatment_prior_to_application ;
rr:objectMap [ rr:column "Test method: Test substance: treatment prior to application" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_ph_and_adjustment ;
rr:objectMap [ rr:column "Test method: Test substance: pH and adjustment" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_physical_form_solid ;
rr:objectMap [ rr:column "Test method: Test substance: physical form (solid, liquid, aerosol, dust)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_concentration ;
rr:objectMap [ rr:column "Test method: Test substance: concentration (%)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_composition ;
rr:objectMap [ rr:column "Test method: Test substance: composition" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_purity ;
rr:objectMap [ rr:column "Test method: Test substance: purity (%)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_particle_size_and_procedure ;
rr:objectMap [ rr:column "Test method: Test substance: particle size and procedure" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_solubility_in_vehicle ;
rr:objectMap [ rr:column "Test method: Test substance: solubility in vehicle" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_chemical_batch_nr ;
rr:objectMap [ rr:column "Test method: Test substance: chemical batch nr" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_substance_additional_info ;
rr:objectMap [ rr:column "Test method: Test substance: additional info" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_speciesstrain ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: species/strain" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_source ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: source" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_age_at_start_of_experiment_days ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: age at start of experiment (days, weeks, months, years)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_age__unit_day ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: age unit (day, week, month, year)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_sex_female ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: sex (female, male)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_feed ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: feed" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_weight ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: weight" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_weight_unit_gram ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: weight unit (gram, kilogram)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_test_animal_n_animals__group ;
rr:objectMap [ rr:column "Test method: Test conditions: Test animal: n animals / group" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_dose_levels ;
rr:objectMap [ rr:column "Test method: Test conditions: dose levels" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_dose_level_unit ;
rr:objectMap [ rr:column "Test method: Test conditions: dose level unit (or extra info)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_dose_volume_mlkg_bw ;
rr:objectMap [ rr:column "Test method: Test conditions: dose volume ml/kg bw" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_administration_scheme ;
rr:objectMap [ rr:column "Test method: Test conditions: administration scheme" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_oral__gavage ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: oral ( gavage, diet, water, intubation, other)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_dermal ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: dermal" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_patching_technique_open ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: patching technique (open, semi-occluded, occluded)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_body_surface ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: body surface (cm2 or %)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_skin_condition ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: skin condition" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_area_of_body ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: area of body" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_inhalation__nose_head__only ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: inhalation ( nose head - only, whole body)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_route_of_exposure_other ;
rr:objectMap [ rr:column "Test method: Test conditions: Route of exposure: other" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_rinsing ;
rr:objectMap [ rr:column "Test method: Test conditions: rinsing" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_vehicle_name;
rr:objectMap [ rr:column "Test method: Test conditions: vehicle name" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_vehicle_concentration_ ;
rr:objectMap [ rr:column "Test method: Test conditions: vehicle concentration %" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_sampling ;
rr:objectMap [ rr:column "Test method: Test conditions: sampling" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_observation_period_dayd ;
rr:objectMap [ rr:column "Test method: Test conditions: observation period (day=d, month=m, year=y)" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:test_method_test_conditions_exposure_period__recovery_period_days ;
rr:objectMap [ rr:column "Test method: Test conditions: exposure period + recovery period days" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_year ;
rr:objectMap [ rr:column "Reliability: year" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_glp ;
rr:objectMap [ rr:column "Reliability: GLP" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_sccs_comment_to_test ;
rr:objectMap [ rr:column "Reliability: SCCS comment to test" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_ref_in_dossier ;
rr:objectMap [ rr:column "Reliability: Ref. in dossier" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_preliminary_test ;
rr:objectMap [ rr:column "Reliability: preliminary test" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_control_group__satellite_group ;
rr:objectMap [ rr:column "Reliability: control group + satellite group" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:reliability_klimisch_score ;
rr:objectMap [ rr:column "Reliability: klimisch score" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:additional_information ;
rr:objectMap [ rr:column "additional information" ; ] ;
] ;
rr:predicateObjectMap [
rr:predicate ont:own_comments ;
rr:objectMap [ rr:column "own comments" ; ] ;
] ;
# <#SPECIESTriplesMap>
#     # todo: \"type of study ( in vivo, in vitro, in silico, in chemico\" -> camelcase
#     rr:logicalTable [ rr:sqlQuery """
#             WITH RECURSIVE SPECIES (ID, SPECIES, REST) AS 
# 			( 
# 				SELECT 
#                     ID, 
#                     NULL, 
#                     SPECIES || ',' 
#                 FROM (  SELECT 
#                             ROWNUM() AS ID, 
#                             \"species/strain\" AS SPECIES 
#                         FROM REPEATEDTOXICITY WHERE \"species/strain\" IS NOT NULL
#                 ) 
# 				UNION ALL 
# 				SELECT 
#                     ID, 
#                     TRIM(SUBSTR(REST, 0, INSTR(REST, ',') - 1)), 
#                     SUBSTR(REST, INSTR(REST, ',') + 1) 
#                 FROM SPECIES WHERE REST <> '' 
# 			) SELECT DISTINCT * FROM SPECIES
#     """ ] ;

#     rr:subjectMap [
#         rr:template "http://toxin.vub.be/resource/species/{SPECIES}" ;
#         rr:class ont:Species ;
#     ] ;

#     # rr:predicateObjectMap [
#     #     # CLEANUP ONTOLOGY, NORMALIZE WITH IRIS
#     #     rr:predicate ont:species_strain ;
#     #     rr:objectMap [ rr:column "\"species/strain\"" ; ] ;
#     # ] ; 

#     rr:predicateObjectMap [
#         rr:predicate rdfs:label ;
#         rr:objectMap [ rr:column "SPECIES" ; ] ;
#     ] ; 

# .